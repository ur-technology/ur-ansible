---
# install and setup NRPE and checks

- name: Check Operating System
  fail:
    msg="You're not running a supported operating system (CentOS or RHEL 7+)"
  when: ((ansible_os_family != "RedHat") or (ansible_distribution_major_version|int < 7))

- name: Import EPEL GPG Key
  rpm_key: key=https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    state=present

- name: Check for EPEL repo
  yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state=present

- name: Install NRPE and Common Plugins
  yum: name={{ item }} state=present
  become: true
  with_items:
    - nrpe
    - nagios-plugins-load
    - nagios-plugins-nrpe
    - nagios-plugins-uptime
    - nagios-plugins-swap
    - nagios-plugins-procs
    - nagios-plugins-users
    - nagios-plugins-disk
    - nagios-plugins-tcp
    - libsemanage-python

- name: Setup NRPE client configuration
  template:
    src=nrpe.cfg.j2
    dest=/etc/nagios/nrpe.cfg
  register: nrpe_needs_restart

# SELinux boolean for nagios
- name: Apply SELinux boolean nagios_run_sudo
  seboolean: name=nagios_run_sudo state=yes persistent=yes
  ignore_errors: true

# SELinux boolean for nagios
- name: Apply SELinux boolean logging_syslogd_run_nagios_plugins
  seboolean: name=logging_syslogd_run_nagios_plugins state=yes persistent=yes
  ignore_errors: true

### begin firewall ###
# we need TCP/5666 open
# determine firewall status and take action
# 1) use firewall-cmd if firewalld is utilized
# 2) insert iptables rule if iptables is used

# Firewalld
- name: Determine if firewalld is in use
  shell: systemctl is-enabled firewalld.service | egrep -qv 'masked|disabled'
  ignore_errors: true
  register: firewalld_in_use
  no_log: true

- name: Determine if firewalld is active
  shell: systemctl is-active firewalld.service | grep -vq inactive
  ignore_errors: true
  register: firewalld_is_active
  no_log: true

- name: Determine if TCP/{{nrpe_tcp_port}} is already active
  shell: firewall-cmd --list-ports | egrep -q "^{{nrpe_tcp_port}}/tcp"
  ignore_errors: true
  register: firewalld_nrpe_tcp_port_exists
  no_log: true

# add firewall rule via firewall-cmd
- name: Add firewall rule for TCP/{{nrpe_tcp_port}} (firewalld)
  command: "{{ item }}"
  with_items:
    - firewall-cmd --zone=public --add-port={{nrpe_tcp_port}}/tcp --permanent
    - firewall-cmd --reload
  ignore_errors: true
  become: true
  when: firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_nrpe_tcp_port_exists.rc != 0

# iptables-services
- name: check firewall rules for TCP/{{nrpe_tcp_port}} (iptables-services)
  shell: grep "dport {{nrpe_tcp_port}} \-j ACCEPT" /etc/sysconfig/iptables | wc -l
  ignore_errors: true
  register: iptables_nrpe_tcp_port_exists
  failed_when: iptables_nrpe_tcp_port_exists == 127
  no_log: true

- name: Add firewall rule for TCP/{{nrpe_tcp_port}} (iptables-services)
  lineinfile:
    dest: /etc/sysconfig/iptables
    line: '-A INPUT -p tcp -m tcp --dport {{nrpe_tcp_port}} -j ACCEPT'
    regexp: '^INPUT -i lo -j ACCEPT'
    insertbefore: '-A INPUT -i lo -j ACCEPT'
    backup: yes
  when: firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_nrpe_tcp_port_exists.stdout|int == 0
  register: iptables_needs_restart

- name: Restart iptables-services for TCP/{{nrpe_tcp_port}} (iptables-services)
  shell: systemctl restart iptables.service
  ignore_errors: true
  when: iptables_needs_restart != 0 and firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0

### end firewall settings ###

- name: Start NRPE service
  command: systemctl restart nrpe.service
  ignore_errors: true
  when: nrpe_needs_restart != 0

- name: Set NRPE to start on boot
  command: systemctl enable nrpe.service
  ignore_errors: true
