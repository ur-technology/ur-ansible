---
# Playbook to install nagios server and generate hosts/checks
# This also installs NRPE on clients for more in-depth checks based on
# Ansible inventory
# author: Will Foster (@sadsfae)
# https://github.com/sadsfae/ansible-nagios
# https://hobo.house/2016/06/24/automate-nagios-deployment-with-ansible/

- name: Check Operating System
  fail:
    msg="You're not running a supported operating system (CentOS or RHEL 7+)"
  when: ((ansible_os_family != "RedHat") or (ansible_distribution_major_version|int < 7))

- name: Import EPEL GPG Key
  rpm_key: key=https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    state=present

- name: Check for EPEL repo
  yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state=present

- name: Install HTTPD and OpenSSL
  yum: name={{ item }} state=present
  become: true
  with_items:
    - httpd
    - httpd-tools
    - mod_ssl
    - openssl
    - openssl-libs

- name: Setup nagios SSL HTTPD vhost
  copy: src=nagios.conf dest=/etc/httpd/conf.d/

- name: Install nagios packages and common plugins
  yum: name={{ item }} state=present
  become: true
  with_items:
    - nagios
    - nagios-common
    - nagios-plugins-ssh
    - nagios-plugins-tcp
    - nagios-plugins-http
    - nagios-plugins-load
    - nagios-plugins-nrpe
    - nagios-plugins-uptime
    - nagios-plugins-swap
    - nagios-plugins-ping
    - nagios-plugins-procs
    - nagios-plugins-users
    - nagios-plugins-disk
    - libsemanage-python

- name: Check nagios Users
  stat: path=/etc/nagios/passwd
  ignore_errors: true
  register: nagios_user_pwfile_exists

- name: Create empty password file
  command: touch /etc/nagios/passwd
  args:
    creates: /etc/nagios/passwd
  when: nagios_user_pwfile_exists != 0

- name: Create nagios admin user
  command: htpasswd -b -c /etc/nagios/passwd {{nagios_username}} {{nagios_password}}
  ignore_errors: true
  when: nagios_user_pwfile_exists != 0

- name: Create nagios guest user
  command: htpasswd -b /etc/nagios/passwd {{nagios_ro_username}} {{nagios_ro_password}}
  when: nagios_create_guest_user

- name: Configure nagios main configuration
  copy: src=nagios.cfg dest=/etc/nagios/nagios.cfg

- name: Configure nagios localhost monitoring
  copy: src=localhost.cfg dest=/etc/nagios/objects/localhost.cfg

- name: Create generic nagios services config
  copy: src=services.cfg dest=/etc/nagios/

- name: Generate the nagios monitoring templates
  template: src={{ item + ".j2" }}
            dest=/etc/nagios/conf.d/{{ item }}
  with_items:
    - oobservers.cfg
    - switches.cfg
    - webservers.cfg
    - servers.cfg
    - commands.cfg
    - elkservers.cfg
    - elasticsearch.cfg
  register: nagios_needs_restart

- name: Generate the nagios contact template
  template: src={{ item + ".j2" }}
            dest=/etc/nagios/objects/{{ item }}
  with_items:
    - contacts.cfg

- name: Generate the nagios user CGI template
  template: src={{ item + ".j2" }}
            dest=/etc/nagios/{{ item }}
  with_items:
    - cgi.cfg

# SELinux boolean for nagios
- name: Apply SELinux boolean nagios_run_sudo
  seboolean: name=nagios_run_sudo state=yes persistent=yes
  ignore_errors: true

# SELinux boolean for nagios
- name: Apply SELinux boolean logging_syslogd_run_nagios_plugins
  seboolean: name=logging_syslogd_run_nagios_plugins state=yes persistent=yes
  ignore_errors: true

# https://bugzilla.redhat.com/show_bug.cgi?id=1291718
- name: Create nagios socket tmp files
  file:
    path=/var/log/nagios/rw
    state=directory
    owner=nagios
    group=nagios
    mode=0777
    seuser=system_u

# employ lineinfile fix for faulty, shipped nagios systemd service
- name: Check/fix systemd service file
  lineinfile: dest=/usr/lib/systemd/system/nagios.service \
          regexp="^ExecStopPost=" \
          line="ExecStopPost=/usr/bin/rm -f /var/spool/nagios/cmd/nagios.cmd /var/log/nagios/rw/nagios.qh"
  register: systemd_nagios_changed

# change listening port for http to match group_vars/all.yml
- name: Set HTTP Listen Port
  lineinfile: dest=/etc/httpd/conf/httpd.conf \
          regexp="^Listen" \
          line="Listen {{nagios_http_port}}"

- name: Reload Systemd if needed
  command: systemctl daemon-reload
  when: systemd_nagios_changed !=0

### begin firewall ###
# we need TCP/80 and TCP/443 open
# determine firewall status and take action
# 1) use firewall-cmd if firewalld is utilized
# 2) insert iptables rule if iptables is used

# Firewalld
- name: Determine if firewalld is in use
  shell: systemctl is-enabled firewalld.service | egrep -qv 'masked|disabled'
  ignore_errors: true
  register: firewalld_in_use
  no_log: true

- name: Determine if firewalld is active
  shell: systemctl is-active firewalld.service | grep -vq inactive
  ignore_errors: true
  register: firewalld_is_active
  no_log: true

- name: Determine if TCP/{{nagios_http_port}} is already active
  shell: firewall-cmd --list-ports | egrep -q "^{{nagios_http_port}}/tcp"
  ignore_errors: true
  register: firewalld_nagios_http_port_exists
  no_log: true

# add firewall rule via firewall-cmd
- name: Add firewall rule for TCP/{{nagios_http_port}} (firewalld)
  command: "{{ item }}"
  with_items:
    - firewall-cmd --zone=public --add-port={{nagios_http_port}}/tcp --permanent
    - firewall-cmd --reload
  ignore_errors: true
  become: true
  when: firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_nagios_http_port_exists.rc != 0

# iptables-services
- name: check firewall rules for TCP/{{nagios_http_port}} (iptables-services)
  shell: grep "dport {{nagios_http_port}} \-j ACCEPT" /etc/sysconfig/iptables | wc -l
  ignore_errors: true
  register: iptables_nagios_http_port_exists
  failed_when: iptables_nagios_http_port_exists == 127
  no_log: true

- name: Add firewall rule for TCP/{{nagios_http_port}} (iptables-services)
  lineinfile:
    dest: /etc/sysconfig/iptables
    line: '-A INPUT -p tcp -m tcp --dport {{nagios_http_port}} -j ACCEPT'
    regexp: '^INPUT -i lo -j ACCEPT'
    insertbefore: '-A INPUT -i lo -j ACCEPT'
    backup: yes
  when: firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_nagios_http_port_exists.stdout|int == 0
  register: iptables_needs_restart

- name: Restart iptables-services for TCP/{{nagios_http_port}} (iptables-services)
  shell: systemctl restart iptables.service
  ignore_errors: true
  when: iptables_needs_restart != 0 and firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0

- name: Determine if TCP/{{nagios_https_port}} is already active
  shell: firewall-cmd --list-ports | egrep -q "^{{nagios_https_port}}/tcp"
  ignore_errors: true
  register: firewalld_nagios_https_port_exists
  no_log: true

# add firewall rule via firewall-cmd
- name: Add firewall rule for TCP/{{nagios_https_port}} (firewalld)
  command: "{{ item }}"
  with_items:
    - firewall-cmd --zone=public --add-port={{nagios_https_port}}/tcp --permanent
    - firewall-cmd --reload
  ignore_errors: true
  become: true
  when: firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_nagios_https_port_exists.rc != 0

# iptables-services
- name: check firewall rules for TCP/{{nagios_https_port}} (iptables-services)
  shell: grep "dport {{nagios_https_port}} \-j ACCEPT" /etc/sysconfig/iptables | wc -l
  ignore_errors: true
  register: iptables_nagios_https_port_exists
  failed_when: iptables_nagios_https_port_exists == 127
  no_log: true

- name: Add firewall rule for TCP/{{nagios_https_port}} (iptables-services)
  lineinfile:
    dest: /etc/sysconfig/iptables
    line: '-A INPUT -p tcp -m tcp --dport {{nagios_https_port}} -j ACCEPT'
    regexp: '^INPUT -i lo -j ACCEPT'
    insertbefore: '-A INPUT -i lo -j ACCEPT'
    backup: yes
  when: firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_nagios_https_port_exists.stdout|int == 0
  register: iptables_needs_restart

- name: Restart iptables-services for TCP/{{nagios_https_port}} (iptables-services)
  shell: systemctl restart iptables.service
  ignore_errors: true
  when: iptables_needs_restart != 0 and firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0

### end firewall settings ###

- name: Start nagios service
  command: systemctl restart nagios.service
  when: nagios_needs_restart != 0

- name: Set nagios to start on boot
  command: systemctl enable nagios.service
  ignore_errors: true

- name: Setup HTTPD service
  command: systemctl enable httpd.service
  ignore_errors: true
  when: nagios_needs_restart !=0

- name: Restart HTTPD service
  command: systemctl restart httpd.service
  ignore_errors: true
  when: nagios_needs_restart !=0

- name: Display nagios information
  debug:
    msg="You can access nagios at https://{{ansible_fqdn}}/nagios using {{nagios_username}} / {{nagios_password}}"

- name: Display nagios guest information
  debug:
    msg="Guest read only users at https://{{ansible_fqdn}}/nagios using {{nagios_ro_username}} / {{nagios_ro_password}}"

- name: Display user password change information
  debug:
    msg="Run the following to change the nagios password --> htpasswd /etc/nagios/passwd nagiosadmin"

